// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  datasets      Dataset[]
  reports       Report[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Dataset {
  id        String   @id @default(cuid())
  url       String
  userId    String
  report    Report?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

enum AnalysisService {
  AWS
  AZURE
}

model AnalysisResult {
  id               String          @id @default(cuid())
  service          AnalysisService
  sentiment        String
  totalTexts       Int
  PositiveAvgScore Float
  NegativeAvgScore Float
  NeutralAvgScore  Float
  MixedAvgScore    Float
  reportId String

  report Report @relation(fields: [reportId], references: [id], onDelete: Cascade)
  @@unique([service, reportId])
}

model Report {
  id             String           @id @default(cuid())
  url            String?
  datasetId      String           @unique
  userId         String
  createdAt      DateTime         @default(now())
  analysisResults AnalysisResult[]

  dataset Dataset @relation(fields: [datasetId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
